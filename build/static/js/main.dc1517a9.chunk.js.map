{"version":3,"sources":["services/PersonService.js","components/SearchFilter/index.js","components/PersonForm/index.js","components/NumberList/index.js","components/NotificationMessage/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","personService","get","then","response","data","person","post","id","put","delete","SearchFilter","filterValue","setFilterValue","htmlFor","value","onChange","event","target","PersonForm","handleAdd","newName","setNewName","newNumber","setNewNumber","onSubmit","className","type","NumberList","persons","filteredPersons","handleDelete","map","name","number","onClick","NotificationMessage","message","style","color","App","useState","setPersons","notification","setNotification","useEffect","filter","toLowerCase","includes","preventDefault","alreadyExists","find","newPerson","undefined","setTimeout","window","confirm","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc1517a9.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api/notes'\r\n})\r\n\r\nconst personService = {\r\n  get: () => {\r\n    const request = api.get()\r\n    return request.then(response => response.data)\r\n  },\r\n  create: (person) => {\r\n    const request = api.post('', person)\r\n    return request.then(response => response.data)\r\n  },\r\n  update: (id, person) => {\r\n    const request = api.put(`/${id}`, person)\r\n    return request.then(response => response.data)\r\n  },\r\n  delete: (id) => {\r\n    const request = api.delete(`/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n}\r\n\r\nexport { personService }","const SearchFilter = ({ filterValue, setFilterValue }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filter\">filter shown with</label>\r\n      <input id=\"filter\" value={filterValue} onChange={(event) => setFilterValue(event.target.value)} />\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport { SearchFilter }","const PersonForm = ({ handleAdd, newName, setNewName, newNumber, setNewNumber }) => {\r\n  return (\r\n    <form onSubmit={handleAdd}>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input id=\"name\" value={newName} onChange={(event) => setNewName(event.target.value)} />\r\n      </div>\r\n      \r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"number\">Number</label>\r\n        <input id=\"number\" value={newNumber} onChange={(event) => setNewNumber(event.target.value)} />\r\n      </div>\r\n\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  )\r\n  \r\n}\r\n\r\nexport { PersonForm }","const NumberList = ({ filterValue, persons, filteredPersons, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      { \r\n        filterValue ? filteredPersons.map(person => <li key={person.name}>{person.name}  {person.number}</li>) \r\n        : \r\n        persons.map(person => {\r\n          return <li key={person.name}>\r\n              <div>\r\n                {person.name}  {person.number}   \r\n                <button onClick={() => handleDelete(person.id)}>delete</button>\r\n              </div>\r\n            </li>\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport { NumberList }","const NotificationMessage = ({ message, type }) => {\r\n  return (\r\n    <>\r\n      {type === 'error' ? <p style={{ color: 'red' }}>{message}</p> : <p style={{ color: 'green' }}>{message}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { NotificationMessage }","import { useState, useEffect } from 'react'\n\nimport { personService } from './services/PersonService'\n\nimport { SearchFilter } from './components/SearchFilter'\nimport { PersonForm } from './components/PersonForm'\nimport { NumberList } from './components/NumberList'\nimport { NotificationMessage } from './components/NotificationMessage'\n\nimport './App.css'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n\n  const [notification, setNotification] = useState(false)\n\n  useEffect(() => {\n    personService.get().then(response => setPersons(response))\n  }, [])\n\n  const filteredPersons = filterValue ? persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase())) : []\n\n  const handleAdd = (event) => {\n    event.preventDefault()\n    const alreadyExists = persons.find(person => person.name === newName)\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(alreadyExists !== undefined) {\n      const result = window.confirm(`Name ${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if(!result) return\n\n      personService.update(alreadyExists.id, newPerson)\n        .then(response => {\n          setPersons([...persons.filter(person => person.id !== alreadyExists.id), response])\n\n          setNotification({ message: 'User updated', type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(() => {\n          setNotification({ message: 'User already deleted', type: 'error' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n\n      return\n    }\n\n    personService.create(newPerson)\n      .then(response => {\n        setPersons([...persons, response])\n        setNotification({ message: 'User added', type: 'success' })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n  }\n\n  const handleDelete = (id) => {\n    const result = window.confirm('Delete person?')\n    if(result) {\n      personService.delete(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n\n          setNotification({ message: 'User deleted', type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(() => {\n          setNotification({ message: 'User already deleted', type: 'error' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {notification && <NotificationMessage message={notification.message} type={notification.type} />}\n\n      <SearchFilter filterValue={filterValue} setFilterValue={setFilterValue} />\n\n      <h2>Phonebook</h2>\n      <PersonForm \n        handleAdd={handleAdd} \n        newName={newName} \n        setNewName={setNewName} \n        newNumber={newNumber} \n        setNewNumber={setNewNumber} \n      />\n      \n      <h2>Numbers</h2>\n      <NumberList filterValue={filterValue} persons={persons} filteredPersons={filteredPersons} handleDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}