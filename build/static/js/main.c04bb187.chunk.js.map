{"version":3,"sources":["services/ContactService.js","components/SearchFilter/index.js","components/ContactForm/index.js","components/NumberList/index.js","components/NotificationMessage/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","contactService","get","then","response","data","contact","post","id","put","delete","SearchFilter","filterValue","setFilterValue","htmlFor","value","onChange","event","target","ContactForm","handleAdd","newName","setNewName","newNumber","setNewNumber","onSubmit","className","type","NumberList","contacts","filteredContacts","handleDelete","map","name","number","onClick","_id","NotificationMessage","message","style","color","App","useState","setContacts","notification","setNotification","useEffect","filter","toLowerCase","includes","preventDefault","alreadyExists","find","newContact","undefined","setTimeout","catch","error","window","confirm","console","log","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c04bb187.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api/contacts'\r\n})\r\n\r\nconst contactService = {\r\n  get: () => {\r\n    const request = api.get()\r\n    return request.then(response => response.data)\r\n  },\r\n  create: (contact) => {\r\n    const request = api.post('', contact)\r\n    return request.then(response => response.data)\r\n  },\r\n  update: (id, contact) => {\r\n    const request = api.put(`/${id}`, contact)\r\n    return request.then(response => response.data)\r\n  },\r\n  delete: (id) => {\r\n    const request = api.delete(`/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n}\r\n\r\nexport { contactService }","const SearchFilter = ({ filterValue, setFilterValue }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filter\">filter shown with</label>\r\n      <input id=\"filter\" value={filterValue} onChange={(event) => setFilterValue(event.target.value)} />\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport { SearchFilter }","const ContactForm = ({ handleAdd, newName, setNewName, newNumber, setNewNumber }) => {\r\n  return (\r\n    <form onSubmit={handleAdd}>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input id=\"name\" value={newName} onChange={(event) => setNewName(event.target.value)} />\r\n      </div>\r\n      \r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"number\">Number</label>\r\n        <input id=\"number\" value={newNumber} onChange={(event) => setNewNumber(event.target.value)} />\r\n      </div>\r\n\r\n      <button type=\"submit\">add</button>\r\n    </form>\r\n  )\r\n  \r\n}\r\n\r\nexport { ContactForm }","const NumberList = ({ filterValue, contacts, filteredContacts, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      { \r\n        filterValue ? filteredContacts.map(contact => {\r\n          return <li key={contact._id}>\r\n            <div>\r\n              {contact.name}  {contact.number}\r\n              <button onClick={() => handleDelete(contact._id)}>delete</button>\r\n            </div>\r\n          </li>\r\n        }) \r\n        : \r\n        contacts.map(contact => {\r\n          return <li key={contact._id}>\r\n              <div>\r\n                {contact.name}  {contact.number}   \r\n                <button onClick={() => handleDelete(contact._id)}>delete</button>\r\n              </div>\r\n            </li>\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport { NumberList }","const NotificationMessage = ({ message, type }) => {\r\n  return (\r\n    <>\r\n      {type === 'error' ? <p style={{ color: 'red' }}>{message}</p> : <p style={{ color: 'green' }}>{message}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { NotificationMessage }","import { useState, useEffect } from 'react'\n\nimport { contactService } from './services/ContactService'\n\nimport { SearchFilter } from './components/SearchFilter'\nimport { ContactForm } from './components/ContactForm'\nimport { NumberList } from './components/NumberList'\nimport { NotificationMessage } from './components/NotificationMessage'\n\nimport './App.css'\n\nfunction App() {\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n\n  const [notification, setNotification] = useState(false)\n\n  useEffect(() => {\n    contactService.get().then(response => setContacts(response))\n  }, [])\n\n  const filteredContacts = filterValue ? contacts.filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase())) : []\n\n  const handleAdd = (event) => {\n    event.preventDefault()\n    const alreadyExists = contacts.find(contact => contact.name === newName)\n\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(alreadyExists !== undefined) {\n      const result = window.confirm(`Name ${newName} is already added to phonebook, replace the old number with a new one?`)\n\n      if(!result) return\n\n      contactService.update(alreadyExists._id, newContact)\n        .then(response => {\n          setContacts([...contacts.filter(contact => contact._id !== alreadyExists._id), response])\n\n          setNotification({ message: 'Contact updated', type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error)\n          setNotification({ message: error.response.data.error, type: 'error' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n\n      return\n    }\n\n    contactService.create(newContact)\n      .then(response => {\n        setContacts([...contacts, response])\n        setNotification({ message: 'Contact added', type: 'success' })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setNotification({ message: error.response.data.error, type: 'error' })\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n  }\n\n  const handleDelete = (id) => {\n    const result = window.confirm('Delete person?')\n    if(result) {\n      contactService.delete(id)\n        .then(() => {\n          setContacts(contacts.filter(contact => contact._id !== id))\n\n          setNotification({ message: 'Contact deleted', type: 'success' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n        .catch((err) => {\n          console.log(err)\n          setNotification({ message: 'Contact already deleted', type: 'error' })\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {notification && <NotificationMessage message={notification.message} type={notification.type} />}\n\n      <SearchFilter filterValue={filterValue} setFilterValue={setFilterValue} />\n\n      <h2>Phonebook</h2>\n      <ContactForm \n        handleAdd={handleAdd} \n        newName={newName} \n        setNewName={setNewName} \n        newNumber={newNumber} \n        setNewNumber={setNewNumber} \n      />\n      \n      <h2>Numbers</h2>\n      <NumberList filterValue={filterValue} contacts={contacts} filteredContacts={filteredContacts} handleDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}